{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/jidayyy/Blog_southWestFishing/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jidayyy/Blog_southWestFishing/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/jidayyy/Blog_southWestFishing/src/components/Post/CommentList.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport CommentCard from \"./CommentCard\";\nexport default function CommentList() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(\"getComments\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"http://localhost:3000/api/comments/\").then(function (r) {\n              return r.data;\n            })[\"catch\"](function (r) {\n              return console.log(r);\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading;\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error gettings comments\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading comments\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.map(function (comment, index) {\n      return /*#__PURE__*/_jsxDEV(CommentCard, {\n        comment: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentList, \"vamb9feK/asxjJLX6wcKCD8DQJA=\", false, function () {\n  return [useQuery];\n});\n\n_c = CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["/home/jidayyy/Blog_southWestFishing/src/components/Post/CommentList.tsx"],"names":["axios","useQuery","CommentCard","CommentList","get","then","r","data","console","log","error","isLoading","map","comment","index"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,WAAT,GAAoC;AAAA;;AAAA;;AAAA,kBACZF,QAAQ,CACvC,aADuC,wEAEvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUD,KAAK,CACNI,GADC,CACG,qCADH,EAEDC,IAFC,CAEI,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,IAAT;AAAA,aAFJ,WAGK,UAACD,CAAD;AAAA,qBAAOE,OAAO,CAACC,GAAR,CAAYH,CAAZ,CAAP;AAAA,aAHL,CADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFuC,GADI;AAAA,MACvCC,IADuC,aACvCA,IADuC;AAAA,MACjCG,KADiC,aACjCA,KADiC;AAAA,MAC1BC,SAD0B,aAC1BA,SAD0B;;AAS/C,MAAID,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAIC,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,sBACI;AAAA,cACKJ,IAAI,IACDA,IAAI,CAACK,GAAL,CAAS,UAACC,OAAD,EAAmBC,KAAnB;AAAA,0BACL,QAAC,WAAD;AAAyB,QAAA,OAAO,EAAED;AAAlC,SAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,eADK;AAAA,KAAT;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnBuBX,W;UACeF,Q;;;KADfE,W","sourcesContent":["import { Comment } from \".prisma/client\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport CommentCard from \"./CommentCard\";\n\nexport default function CommentList(): JSX.Element {\n    const { data, error, isLoading } = useQuery(\n        \"getComments\",\n        async () =>\n            await axios\n                .get(\"http://localhost:3000/api/comments/\")\n                .then((r) => r.data)\n                .catch((r) => console.log(r)),\n    );\n    if (error) return <div>Error gettings comments</div>;\n    if (isLoading) return <div>Loading comments</div>;\n    return (\n        <div>\n            {data &&\n                data.map((comment: Comment, index: number) => (\n                    <CommentCard key={index} comment={comment} />\n                ))}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}