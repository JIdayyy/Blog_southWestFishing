{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/home/jidayyy/Blog_southWestFishing/pages/post/[id].tsx\";\nimport prisma from \"../../prisma/client\";\nimport getAllPostIds from \"../../lib/getAllPostIds\";\nimport Article from \"@components/Post/Article\";\n\nfunction article(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Article, {\n    article: props.post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n\nexport default _withSuperJSONPage(article);\nexport const getStaticProps = _withSuperJSONProps(async function getStaticProps(params) {\n  const {\n    id\n  } = params.params;\n  const post = await prisma.post.findUnique({\n    where: {\n      id: id\n    },\n    include: {\n      picture: true,\n      author: true\n    },\n    rejectOnNotFound: true\n  });\n  return {\n    props: {\n      post\n    }\n  };\n}, []);\nexport async function getStaticPaths() {\n  const paths = await getAllPostIds();\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/jidayyy/Blog_southWestFishing/pages/post/[id].tsx"],"names":["prisma","getAllPostIds","Article","article","props","console","log","post","getStaticProps","params","id","findUnique","where","include","picture","author","rejectOnNotFound","getStaticPaths","paths","fallback"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,aAAP,MAA0B,yBAA1B;AAIA,OAAOC,OAAP,MAAoB,0BAApB;;AAIe,SAASC,OAAT,CAAiBC,KAAjB,EAA6C;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBAAO,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,KAAK,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAJD,kCAAwBJ,OAAxB;AAMA,aAAsBK,cAAtB,sCAAsBA,cAAtB,CAAqCC,MAArC,EAI0C;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAASD,MAAM,CAACA,MAAtB;AAEA,QAAMF,IAAI,GAAG,MAAMP,MAAM,CAACO,IAAP,CAAYI,UAAZ,CAAuB;AACtCC,IAAAA,KAAK,EAAE;AACHF,MAAAA,EAAE,EAAEA;AADD,KAD+B;AAItCG,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,MAAM,EAAE;AAFH,KAJ6B;AAQtCC,IAAAA,gBAAgB,EAAE;AARoB,GAAvB,CAAnB;AAUA,SAAO;AACHZ,IAAAA,KAAK,EAAE;AACHG,MAAAA;AADG;AADJ,GAAP;AAKH,CAtBD;AAwBA,OAAO,eAAeU,cAAf,GAGJ;AACC,QAAMC,KAAK,GAAG,MAAMjB,aAAa,EAAjC;AACA,SAAO;AACHiB,IAAAA,KADG;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH","sourcesContent":["import prisma from \"../../prisma/client\";\nimport { GetStaticPropsResult } from \"next\";\nimport getAllPostIds from \"../../lib/getAllPostIds\";\n\nimport { PostWithAuthorAndPictures } from \"pages\";\nimport Image from \"next/image\";\nimport Article from \"@components/Post/Article\";\ntype IProps = {\n    post: PostWithAuthorAndPictures;\n};\nexport default function article(props: IProps): JSX.Element {\n    console.log(props);\n\n    return <Article article={props.post} />;\n}\n\nexport async function getStaticProps(params: {\n    params: {\n        id: string;\n    };\n}): Promise<GetStaticPropsResult<IProps>> {\n    const { id } = params.params;\n\n    const post = await prisma.post.findUnique({\n        where: {\n            id: id,\n        },\n        include: {\n            picture: true,\n            author: true,\n        },\n        rejectOnNotFound: true,\n    });\n    return {\n        props: {\n            post,\n        },\n    };\n}\n\nexport async function getStaticPaths(): Promise<{\n    paths: { params: { id: string } }[];\n    fallback: boolean;\n}> {\n    const paths = await getAllPostIds();\n    return {\n        paths,\n        fallback: false,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}