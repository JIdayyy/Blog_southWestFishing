{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/Users/julien/DEV/Blog_southWestFishing/pages/post/[id].tsx\";\nimport Image from \"next/image\";\n\nfunction article(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white h-full w-full\",\n    children: [props.post.id, props.post.picture[0].url && /*#__PURE__*/_jsxDEV(Image, {\n      src: props.post.picture[0].url,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\nexport var __N_SSG = true;\nexport default _withSuperJSONPage(article);","map":{"version":3,"sources":["/Users/julien/DEV/Blog_southWestFishing/pages/post/[id].tsx"],"names":["Image","article","props","console","log","post","id","picture","url"],"mappings":";;;AAKA,OAAOA,KAAP,MAAkB,YAAlB;;AAIe,SAASC,OAAT,CAAiBC,KAAjB,EAA6C;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,eACKA,KAAK,CAACG,IAAN,CAAWC,EADhB,EAEKJ,KAAK,CAACG,IAAN,CAAWE,OAAX,CAAmB,CAAnB,EAAsBC,GAAtB,iBACG,QAAC,KAAD;AACI,MAAA,GAAG,EAAEN,KAAK,CAACG,IAAN,CAAWE,OAAX,CAAmB,CAAnB,EAAsBC,GAD/B;AAEI,MAAA,KAAK,EAAE,GAFX;AAGI,MAAA,MAAM,EAAE;AAHZ;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;;AAfD,kCAAwBP,OAAxB","sourcesContent":["import prisma from \"../../prisma/client\";\nimport { GetStaticPropsResult } from \"next\";\nimport getAllPostIds from \"../../lib/getAllPostIds\";\n\nimport { PostWithAuthorAndPictures } from \"pages\";\nimport Image from \"next/image\";\ntype IProps = {\n    post: PostWithAuthorAndPictures;\n};\nexport default function article(props: IProps): JSX.Element {\n    console.log(props);\n\n    return (\n        <div className=\"text-white h-full w-full\">\n            {props.post.id}\n            {props.post.picture[0].url && (\n                <Image\n                    src={props.post.picture[0].url}\n                    width={500}\n                    height={500}\n                />\n            )}\n        </div>\n    );\n}\n\nexport async function getStaticProps(params: {\n    params: {\n        id: string;\n    };\n}): Promise<GetStaticPropsResult<IProps>> {\n    const { id } = params.params;\n\n    const post = await prisma.post.findUnique({\n        where: {\n            id: id,\n        },\n        include: {\n            picture: true,\n            author: true,\n        },\n        rejectOnNotFound: true,\n    });\n    return {\n        props: {\n            post,\n        },\n    };\n}\n\nexport async function getStaticPaths(): Promise<{\n    paths: { params: { id: string } }[];\n    fallback: boolean;\n}> {\n    const paths = await getAllPostIds();\n    return {\n        paths,\n        fallback: false,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}