{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/Users/julien/DEV/Blog_southWestFishing/pages/post/[id].tsx\";\nimport prisma from \"../../prisma/client\";\nimport getAllPostIds from \"../../lib/getAllPostIds\";\n\nfunction article(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white\",\n    children: props.post.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\nexport default _withSuperJSONPage(article);\nexport const getStaticProps = _withSuperJSONProps(async function getStaticProps(params) {\n  const {\n    id\n  } = params.params;\n  console.log(typeof id);\n  const post = await prisma.post.findUnique({\n    where: {\n      id: id\n    },\n    rejectOnNotFound: true\n  });\n  return {\n    props: {\n      post\n    }\n  };\n}, []);\nexport async function getStaticPaths() {\n  const paths = await getAllPostIds();\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/julien/DEV/Blog_southWestFishing/pages/post/[id].tsx"],"names":["prisma","getAllPostIds","article","props","console","log","post","id","getStaticProps","params","findUnique","where","rejectOnNotFound","getStaticPaths","paths","fallback"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,aAAP,MAA0B,yBAA1B;;AAKe,SAASC,OAAT,CAAiBC,KAAjB,EAA6C;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAA6BA,KAAK,CAACG,IAAN,CAAWC;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAJD,kCAAwBL,OAAxB;AAMA,aAAsBM,cAAtB,sCAAsBA,cAAtB,CAAqCC,MAArC,EAI0C;AACtC,QAAM;AAAEF,IAAAA;AAAF,MAASE,MAAM,CAACA,MAAtB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOE,EAAnB;AACA,QAAMD,IAAI,GAAG,MAAMN,MAAM,CAACM,IAAP,CAAYI,UAAZ,CAAuB;AACtCC,IAAAA,KAAK,EAAE;AACHJ,MAAAA,EAAE,EAAEA;AADD,KAD+B;AAItCK,IAAAA,gBAAgB,EAAE;AAJoB,GAAvB,CAAnB;AAMA,SAAO;AACHT,IAAAA,KAAK,EAAE;AACHG,MAAAA;AADG;AADJ,GAAP;AAKH,CAlBD;AAoBA,OAAO,eAAeO,cAAf,GAGJ;AACC,QAAMC,KAAK,GAAG,MAAMb,aAAa,EAAjC;AACA,SAAO;AACHa,IAAAA,KADG;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH","sourcesContent":["import prisma from \"../../prisma/client\";\nimport { GetStaticPropsResult } from \"next\";\nimport getAllPostIds from \"../../lib/getAllPostIds\";\nimport { Post } from \".prisma/client\";\ntype IProps = {\n    post: Post;\n};\nexport default function article(props: IProps): JSX.Element {\n    console.log(props);\n\n    return <div className=\"text-white\">{props.post.id}</div>;\n}\n\nexport async function getStaticProps(params: {\n    params: {\n        id: string;\n    };\n}): Promise<GetStaticPropsResult<IProps>> {\n    const { id } = params.params;\n    console.log(typeof id);\n    const post = await prisma.post.findUnique({\n        where: {\n            id: id,\n        },\n        rejectOnNotFound: true,\n    });\n    return {\n        props: {\n            post,\n        },\n    };\n}\n\nexport async function getStaticPaths(): Promise<{\n    paths: { params: { id: string } }[];\n    fallback: boolean;\n}> {\n    const paths = await getAllPostIds();\n    return {\n        paths,\n        fallback: false,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}