{"ast":null,"code":"import _regeneratorRuntime from \"/home/jidayyy/SouthWestFishing/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jidayyy/SouthWestFishing/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/home/jidayyy/SouthWestFishing/pages/post/[id].tsx\";\nimport { prisma } from \"../../prisma/client\";\n\nfunction Post(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Post;\nexport var __N_SSG = true;\nexport default _c2 = _withSuperJSONPage(Post);\nexport function getAllPostIds() {\n  return _getAllPostIds.apply(this, arguments);\n}\n\nfunction _getAllPostIds() {\n  _getAllPostIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var postIds;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return prisma.posts.findMany();\n\n          case 2:\n            postIds = _context.sent;\n            return _context.abrupt(\"return\", postIds.map(function (post) {\n              return {\n                params: {\n                  id: post.id\n                }\n              };\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllPostIds.apply(this, arguments);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/jidayyy/SouthWestFishing/pages/post/[id].tsx"],"names":["prisma","Post","props","console","log","id","getAllPostIds","posts","findMany","postIds","map","post","params"],"mappings":";;;;;AAGA,SAASA,MAAT,QAAuB,qBAAvB;;AAIe,SAASC,IAAT,CAAcC,KAAd,EAA0C;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBAAO;AAAA,cAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAJuBJ,I;;AAAxB,wCAAwBA,IAAxB;AAqBA,gBAAsBK,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBN,MAAM,CAACO,KAAP,CAAaC,QAAb,EADnB;;AAAA;AACGC,YAAAA,OADH;AAAA,6CAEIA,OAAO,CAACC,GAAR,CAAY,UAACC,IAAD,EAAU;AACzB,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJP,kBAAAA,EAAE,EAAEM,IAAI,CAACN;AADL;AADL,eAAP;AAKH,aANM,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { GetStaticPropsResult } from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { prisma } from \"../../prisma/client\";\ntype IProps = {\n    id: number;\n};\nexport default function Post(props: IProps): JSX.Element {\n    console.log(props);\n\n    return <div>{props.id}</div>;\n}\n\nexport async function getStaticProps(\n    context,\n): Promise<GetStaticPropsResult<IProps>> {\n    const { params } = context;\n    console.log(\"id\", params);\n    // const postId = params.id;\n    // const fileToRead = path.join(process.cwd(), \"./DB/SWF.DB\");\n    // const data = JSON.parse(await fs.readFileSync(fileToRead));\n    // const post = data.posts.find((post) => post.id === postId);\n    return {\n        props: {\n            id: 1,\n        },\n    };\n}\nexport async function getAllPostIds() {\n    const postIds = await prisma.posts.findMany();\n    return postIds.map((post) => {\n        return {\n            params: {\n                id: post.id,\n            },\n        };\n    });\n}\n\nexport async function getStaticPaths() {\n    const paths = getAllPostIds();\n    return {\n        paths,\n        fallback: false,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}