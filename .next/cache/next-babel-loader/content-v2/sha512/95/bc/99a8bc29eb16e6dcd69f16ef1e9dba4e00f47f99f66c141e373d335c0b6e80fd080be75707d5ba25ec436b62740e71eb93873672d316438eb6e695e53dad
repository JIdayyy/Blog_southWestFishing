{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/home/jidayyy/SouthWestFishing/pages/post/[id].tsx\";\nimport fs from \"fs\";\nimport { prisma } from \"../../prisma/client\";\n\nfunction Post(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\nexport default _withSuperJSONPage(Post);\nexport const getStaticProps = _withSuperJSONProps(async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  console.log(\"id\", params); // const postId = params.id;\n  // const fileToRead = path.join(process.cwd(), \"./DB/SWF.DB\");\n  // const data = JSON.parse(await fs.readFileSync(fileToRead));\n  // const post = data.posts.find((post) => post.id === postId);\n\n  return {\n    props: {\n      id: 1\n    }\n  };\n}, []);\nexport async function getAllPostIds() {\n  const fileNames = fs.readdirSync(\"./DB\");\n  const postIds = await prisma.posts.findMany();\n  return postIds.map(post => {\n    return {\n      params: {\n        id: post.id\n      }\n    };\n  });\n}\nexport async function getStaticPaths() {\n  const paths = getAllPostIds();\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/jidayyy/SouthWestFishing/pages/post/[id].tsx"],"names":["fs","prisma","Post","props","console","log","id","getStaticProps","context","params","getAllPostIds","fileNames","readdirSync","postIds","posts","findMany","map","post","getStaticPaths","paths","fallback"],"mappings":";;;;AACA,OAAOA,EAAP,MAAe,IAAf;AAEA,SAASC,MAAT,QAAuB,qBAAvB;;AAIe,SAASC,IAAT,CAAcC,KAAd,EAA0C;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBAAO;AAAA,cAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAJD,kCAAwBJ,IAAxB;AAMA,aAAsBK,cAAtB,sCAAsBA,cAAtB,CACIC,OADJ,EAEyC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBI,MAAlB,EAFqC,CAGrC;AACA;AACA;AACA;;AACA,SAAO;AACHN,IAAAA,KAAK,EAAE;AACHG,MAAAA,EAAE,EAAE;AADD;AADJ,GAAP;AAKH,CAdD;AAeA,OAAO,eAAeI,aAAf,GAA+B;AAClC,QAAMC,SAAS,GAAGX,EAAE,CAACY,WAAH,CAAe,MAAf,CAAlB;AAEA,QAAMC,OAAO,GAAG,MAAMZ,MAAM,CAACa,KAAP,CAAaC,QAAb,EAAtB;AACA,SAAOF,OAAO,CAACG,GAAR,CAAaC,IAAD,IAAU;AACzB,WAAO;AACHR,MAAAA,MAAM,EAAE;AACJH,QAAAA,EAAE,EAAEW,IAAI,CAACX;AADL;AADL,KAAP;AAKH,GANM,CAAP;AAOH;AAED,OAAO,eAAeY,cAAf,GAAgC;AACnC,QAAMC,KAAK,GAAGT,aAAa,EAA3B;AACA,SAAO;AACHS,IAAAA,KADG;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH","sourcesContent":["import { GetStaticPropsResult } from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { prisma } from \"../../prisma/client\";\ntype IProps = {\n    id: number;\n};\nexport default function Post(props: IProps): JSX.Element {\n    console.log(props);\n\n    return <div>{props.id}</div>;\n}\n\nexport async function getStaticProps(\n    context,\n): Promise<GetStaticPropsResult<IProps>> {\n    const { params } = context;\n    console.log(\"id\", params);\n    // const postId = params.id;\n    // const fileToRead = path.join(process.cwd(), \"./DB/SWF.DB\");\n    // const data = JSON.parse(await fs.readFileSync(fileToRead));\n    // const post = data.posts.find((post) => post.id === postId);\n    return {\n        props: {\n            id: 1,\n        },\n    };\n}\nexport async function getAllPostIds() {\n    const fileNames = fs.readdirSync(\"./DB\");\n\n    const postIds = await prisma.posts.findMany();\n    return postIds.map((post) => {\n        return {\n            params: {\n                id: post.id,\n            },\n        };\n    });\n}\n\nexport async function getStaticPaths() {\n    const paths = getAllPostIds();\n    return {\n        paths,\n        fallback: false,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}